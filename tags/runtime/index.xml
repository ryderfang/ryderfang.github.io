<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Runtime - 标签 - 给岁月以文明</title><link>https://ryderfang.com/tags/runtime/</link><description>Runtime - 标签 - 给岁月以文明</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 23 Feb 2022 17:49:11 +0800</lastBuildDate><atom:link href="https://ryderfang.com/tags/runtime/" rel="self" type="application/rss+xml"/><item><title>获取 OC Class 对象</title><link>https://ryderfang.com/get-class/</link><pubDate>Wed, 23 Feb 2022 17:49:11 +0800</pubDate><author>ryderfang</author><guid>https://ryderfang.com/get-class/</guid><description>&lt;p>获取 &lt;code>Class&lt;/code> 对象的方法有很多，本文主要是收集整理它们的区别以及探究具体的实现。&lt;/p></description></item><item><title>从 Meta 说起</title><link>https://ryderfang.com/meta-class/</link><pubDate>Mon, 14 Feb 2022 19:45:15 +0800</pubDate><author>ryderfang</author><guid>https://ryderfang.com/meta-class/</guid><description>&lt;p>Meta 这个词在 2021 年下半年开始火爆，而后 Facebook 改名 Meta 引发各大科技公司跟风押注。似乎全球资本都在追逐“元宇宙”的概念，但什么是“元宇宙”，各家有各家的说法，没有一个统一的标准。&lt;/p></description></item><item><title>Class, Object 与 isa</title><link>https://ryderfang.com/class-object-isa/</link><pubDate>Tue, 04 Jan 2022 20:19:38 +0800</pubDate><author>ryderfang</author><guid>https://ryderfang.com/class-object-isa/</guid><description>作为 Runtime 系列的第一篇博文（也是 2022 年第一篇），先从最基础的对象、类开始学习。 参考 OC 编译过程 我们可以借助 clang 工具将 OC 源码预处理成 CPP 来窥探 OC 的内部实现</description></item><item><title>ObjC 之 Runtime 是个啥</title><link>https://ryderfang.com/what-is-runtime/</link><pubDate>Tue, 28 Dec 2021 14:51:24 +0800</pubDate><author>ryderfang</author><guid>https://ryderfang.com/what-is-runtime/</guid><description>概述Runtime 是 OC 这个语言的核心，也是为什么 OC 被称为动态语言的原因。 当我们在讲 Runtime 的时候，我们在说什么？ 根据官方文档的定义， Objective-C Runtime Objective-C Runtime Programming Guide Runtime</description></item></channel></rss>